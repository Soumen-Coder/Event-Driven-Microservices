<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<modules>
		<module>twitter-to-kafka-service</module>
		<module>app-config-data</module>
		<module>kafka</module>
		<module>kafka/kafka-model</module>
		<module>kafka/kafka-admin</module>
		<module>kafka/kafka-producer</module>
		<module>kafka/kafka-consumer</module>
		<module>common-config</module>
		<module>config-server</module>
		<module>kafka-to-elastic-service</module>
		<module>elastic</module>
		<module>common-util</module>
		<module>elastic-query-service</module>
		<module>elastic-query-web-client</module>
	</modules>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.microservices.base</groupId>
	<artifactId>microservices-base</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservices-base</name>
	<description>Base project for building event-driven microservices</description>
	<packaging>pom</packaging> <!-- tells this pom.xml is for base configuration and not for creating runnable jar -->

	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.3.4.RELEASE</spring-boot.version>
		<maven-compiler.version>3.8.1</maven-compiler.version>
		<twitter4j.version>4.0.7</twitter4j.version>
		<twitter-api-java-sdk.version>2.0.2</twitter-api-java-sdk.version>
		<lombok.version>1.18.20</lombok.version>
		<avro.version>1.10.0</avro.version>
		<spring-kafka.version>2.6.2</spring-kafka.version>
		<spring-retry.version>1.3.0</spring-retry.version>
		<kafka-avro-serializer.version>5.5.1</kafka-avro-serializer.version>
		<spring-cloud.version>2.2.6.RELEASE</spring-cloud.version>
		<spring-cloud-dependencies.version>Hoxton.SR9</spring-cloud-dependencies.version> <!-- To work with spring cloud config -->
		<elastic.version>7.9.1</elastic.version>
		<springdoc-openapi-ui.version>1.5.0</springdoc-openapi-ui.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url> <!--kafka-avro-serializer was not present in maven central repository hence included the confluent one -->
		</repository>
	</repositories>

	<dependencyManagement> <!-- manage dependencies, declare all dependencies without downloading them, submodule can override and include the dependency and use them, version management also happens here -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>${spring-cloud-dependencies.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
			<version>${spring-cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>${spring-cloud.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>app-config-data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>common-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>common-config</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>kafka-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>kafka-admin</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>kafka-producer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>elastic-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>elastic-config</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>elastic-index-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>elastic-query-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microservices.base</groupId>
			<artifactId>kafka-consumer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>${spring-kafka.version}</version>
	    </dependency>

		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
			<version>${spring-retry.version}</version>
		</dependency>
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-stream</artifactId>
			<version>${twitter4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${elastic.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>${elastic.version}</version>
		</dependency>

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>${kafka-avro-serializer.version}</version>
			<!-- we don't want to use these dependencies from kafka-avro-serializer hence excluded-->
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.swagger</groupId>
					<artifactId>swagger-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.swagger</groupId>
					<artifactId>swagger-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId> <!-- by default uses java 6-->
				<version>${maven-compiler.version}</version>
				<configuration>
					<!--These are configurations specific to Java 8, after java 9, have to use release-->
					<!--<source>1.8</source>
					<target>1.8</target>-->
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId> <!-- create executable archive files like jar and war files, also create build info, docker images, make the spring boot app runnable, starts spring boot app prior to running integration tests and responsible for starting the app-->
				<version>${spring-boot.version}</version>
			</plugin>
		</plugins>
		</pluginManagement>
	</build>

</project>
